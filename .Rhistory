1+2
hako <- 1+2
hako
q()
q()
demo()
error.catching
is
error.catching()
is.thing
is.things
demo(Japanese)
demo(error.catching)
demo(is.things)
demo(graphics)
demo(plotmath)
demo(glm.vr)
install.packages("ggplot2")
require("randomForest")
install.packages("randomForest")
library("randomForest")
data <- read.csv("train.csv", header=true)
data <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train.csv", header=true)
data <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train.csv")
View(data)
summary(data)
summary(data)
traindata <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train.csv")
summary(traindata)
table(traindata$Survived)
prop.table(table(traindata$Survived))
View(traindata)
View(traindata)
rf <- randomForest(Survived, data=traindata)
rf <- randomForest(Survived ~ ., data=traindata)
train_no_ageblank <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train_no_ageblank.csv")
rf <- randomForest(Survived ~ ., data=train_no_ageblank)
no
n
train_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train_pclass_sex_age.csv")
rf <- randomForest(Survived ~ ., data=train_usedonly)
test_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly.csv")
pred.rf <- predict(rf, newdata=test_usedonly, type="class")
table(pred.rf)
print(rf)
?traindata
?(traindata)
data(traindata)
str(traindata)
train.rf <- randomForest(factor(Survived), data=train_usedonly)
View(train_usedonly)
View(train_usedonly)
View(train_usedonly)
str(train_usedonly)
train_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train_pclass_sex_age.csv"
, colClasses=c("character", "factor", "factor", "factor", "numeric"))
str(train_usedonly)
str(test_usedonly)
test_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly.csv"
, colClasses=c("character", factor", "factor", "numeric"))
test_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly.csv"
, colClasses=c("character", "factor", "factor", "numeric"))
str(test_usedonly)
train.rf <- randomForest(factor(Survived), data=train_usedonly)
train.rf <- randomForest(Survived ~ ., data=train_usedonly)
print(train.rf)
pred.rf <- predict(train.rf, newdata=test_usedonly, type="class")
table(pred.rf)
str(pred.rf)
print(pred.rf)
summary(pred.rf)
library("randomForest")
#分析対象列のみ、年齢欠損行除去
train_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/train_pclass_sex_age.csv"
, colClasses=c("character", "factor", "factor", "factor", "numeric"))
#分析対象列のみ、年齢欠損行そのまま
test_usedonly <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly.csv"
, colClasses=c("character", "factor", "factor", "numeric"))
#分析対象列のみ、年齢欠損行除去
test_usedonly_noblankage <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly_noblankage.csv"
, colClasses=c("character", "factor", "factor", "numeric"))
train.rf <- randomForest(Survived ~ ., data=train_usedonly)
print(train.rf)
pred.rf <- predict(train.rf, newdata=test_usedonly, type="class")
table(pred.rf)
summary(pred.rf)
print(pred.rf)
str(pred.rf)
write.csv(pred.rf, "/Users/yuji/Desktop/kaggle/titanic/result_test_usedonly.csv")
summary(test_usedonly)
table(test_usedonly)
str(test_usedonly)
test.age <- test_usedonly$age
test.age <- test_usedonly$Age
str(test.age)
summary(test.age)
test.age[,1]
test_usedonly[,1]
test_usedonly[,2]
str(test_usedonly[,2])
str(test_usedonly[,4])
str(test_usedonly[4])
test_usedonly$Age==NA
test_usedonly$Age==20
test_usedonly[test_usedonly$Age==20]
test_usedonly$PassengerId[test_usedonly$Age==20]
View(test_usedonly)
View(test_usedonly)
isna(test_usedonly$Age)
is.na(test_usedonly$Age)
sum(is.na(test_usedonly$Age))
mean(test_useonly$Age)
mean(test_usedonly$Age)
mean(test_usedonly$Age, na.rm=true)
mean(test_usedonly$Age, na.rm=TRUE)
test_usedonly$Age ==NA
test_usedonly[test_usedonly$Age ==NA, mean(test_usedonly$Age, na.rm=TRUE)]
test_usedonly$Age ==NA
complete.case(test_usedonly$Age)
complete.cases(test_usedonly$Age)
summary(train_usedonly$Age)
#分析対象列のみ、年齢欠損行平均値
test_usedonly_noblankage <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly_agemean.csv"
, colClasses=c("character", "factor", "factor", "numeric"))
test_usedonly_noblankage <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly_noblankage.csv"
, colClasses=c("character", "factor", "factor", "numeric"))
#分析対象列のみ、年齢欠損行平均値
test_usedonly_agemean <- read.csv("/Users/yuji/Desktop/kaggle/titanic/test_usedonly_agemean.csv"
, colClasses=c("character", "factor", "factor", "numeric"))
pred.rf2 <- predict(train.rf, newdata=test_usedonly, type="class")
table(pred.rf2)
summary(pred.rf2)
write.csv(pred.rf2, "/Users/yuji/Desktop/kaggle/titanic/result_test_usedonly_agemean.csv")
pred.rf2 <- predict(train.rf, newdata=test_usedonly_agemean, type="class")
table(pred.rf2)
summary(pred.rf2)
write.csv(pred.rf2, "/Users/yuji/Desktop/kaggle/titanic/result_test_usedonly_agemean.csv")
print(train.rf)
plot(train.rf)
varImpPlot(train.rf)
View(train_usedonly)
View(train_usedonly)
testdfr <- train_usedonly[, c("Survived", "Pclass", "Sex", "Age")]
View(testdfr)
train.rf2 <- randomForest(Survived ~ ., data=testdfr)
print(train.rf2)
plot(train.rf2)
varImpPlot(train.rf2)
pred.rf2 <- predict(train.rf2, newdata=test_usedonly_agemean, type="class")
table(pred.rf2)
summary(pred.rf2)
write.csv(pred.rf2, "/Users/yuji/Desktop/kaggle/titanic/result_test_usedonly_agemean.csv")
install.packages(c("ggplot2", "MASS", "reshape2"))
# set working directory and load data csv
setwd("~/Desktop/kaggle/titanic/kaggle_titanic")
train <- read.csv("~/Desktop/kaggle/titanic/kaggle_titanic/train.csv")
test <- read.csv("~/Desktop/kaggle/titanic/kaggle_titanic/test.csv")
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
